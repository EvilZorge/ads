= nested_form_for @advertisment, html: { multipart: true, class: "form form-horizontal advertisment" } do |f|
  .form-group
    = f.label :title, :class => 'control-label'
    .controls
      = f.text_field :title, :class => 'form-control'
    = error_span(@advertisment[:title])
  .form-group
    = f.label :body, :class => 'control-label'
    .controls
      = f.text_area :body, :class => 'form-control'
    = error_span(@advertisment[:body])
  .form-group
    = f.label :type_id, :class => 'control-label'
    .controls
      = f.select :type_id, Type.all.collect {|p| [ p.name,p.id ] }, :class => 'form-control'
    = error_span(@advertisment[:type_id])
  .form-group
    = f.fields_for :ads_images do |builder|
      - unless builder.object.new_record?
        = image_tag(builder.object.photo.url(:small))
        = builder.link_to_remove 'Delete this image', data: {confirm: 'You sure?'}, :class => 'btn'
      - else
        = builder.label :photo
        = builder.file_field :photo
        = builder.link_to_remove 'remove this field'
    = f.link_to_add 'Add image', :ads_images, :class => 'btn'
  = f.submit nil, :class => 'btn btn-primary'
  '
  = link_to t('.cancel', :default => t("helpers.links.cancel")), advertisments_path, :class => 'btn'
